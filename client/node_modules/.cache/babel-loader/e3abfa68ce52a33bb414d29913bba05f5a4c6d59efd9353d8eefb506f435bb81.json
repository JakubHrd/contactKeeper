{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacko\\\\Desktop\\\\Osobn\\xED projekty\\\\react\\\\contactkeeper\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Stack, Typography, Container, Button, Box, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useUser } from '../context/UserContext';\nimport ContactSection from \"../components/ContactSection\";\nimport ContactCard from \"../components/ContactCard\";\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    userId\n  } = useUser();\n  const [contacts, setContacts] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('práce');\n  const navigate = useNavigate();\n  const contactCategories = {\n    práce: 'Pracovní kontakty',\n    škola: 'Školní kontakty',\n    dovolená: 'Kontakty z dovolené',\n    koníčky: 'Kontakty z koníčků',\n    ostatní: 'Ostatní kontakty'\n  };\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/contacts', {\n          params: {\n            userId\n          }\n        });\n        setContacts(response.data);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchContacts();\n  }, [userId]);\n  const handleAddContact = () => {\n    navigate('/add-contact');\n  };\n  const filteredContacts = contacts.filter(contact => contact.contactSource === selectedCategory);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      display: 'flex',\n      minHeight: '100vh',\n      paddingTop: 3,\n      minWidth: '100%',\n      p: 0,\n      m: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '20%',\n        padding: 2,\n        borderRight: '1px solid #ddd'\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [\" \", /*#__PURE__*/_jsxDEV(motion.div, {\n          whileHover: {\n            scale: 1.05\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              borderRadius: 10,\n              boxShadow: 3,\n              transition: 'all 0.3s ease-in-out',\n              '&:hover': {\n                boxShadow: 5,\n                backgroundColor: '#5c6bc0' // Změna barvy při hoveru\n              }\n            },\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAddContact,\n            fullWidth: true,\n            children: \"P\\u0159idat nov\\xFD kontakt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), Object.keys(contactCategories).map(categoryKey => /*#__PURE__*/_jsxDEV(motion.div, {\n          whileHover: {\n            scale: 1.05\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\" // Tlačítka jako obrysová pro lepší vzhled\n            ,\n            fullWidth: true,\n            onClick: () => setSelectedCategory(categoryKey),\n            sx: {\n              textAlign: 'left',\n              borderColor: selectedCategory === categoryKey ? '#1976d2' : '#ddd',\n              color: selectedCategory === categoryKey ? '#1976d2' : 'inherit',\n              borderRadius: 10,\n              boxShadow: 3,\n              transition: 'all 0.3s ease-in-out',\n              '&:hover': {\n                borderColor: '#1976d2',\n                boxShadow: 4,\n                color: '#1976d2'\n              }\n            },\n            children: contactCategories[categoryKey]\n          }, categoryKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, categoryKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        padding: 2,\n        display: 'flex',\n        flexDirection: 'column',\n        width: '75%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: contactCategories[selectedCategory]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          padding: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [\" \", filteredContacts.map(contact => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 6,\n            lg: 4,\n            xl: 3,\n            children: [\" \", /*#__PURE__*/_jsxDEV(motion.div, {\n              whileHover: {\n                scale: 1.05\n              },\n              children: /*#__PURE__*/_jsxDEV(ContactCard, {\n                contact: contact\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this)]\n          }, contact._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"mLIdHYQlr9znDGnwc8QZ7HO2wX4=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Stack","Typography","Container","Button","Box","List","ListItem","ListItemText","Divider","axios","useNavigate","useUser","ContactSection","ContactCard","motion","jsxDEV","_jsxDEV","Dashboard","_s","userId","contacts","setContacts","selectedCategory","setSelectedCategory","navigate","contactCategories","práce","škola","dovolená","koníčky","ostatní","fetchContacts","response","get","params","data","err","console","error","handleAddContact","filteredContacts","filter","contact","contactSource","sx","display","minHeight","paddingTop","minWidth","p","m","children","width","padding","borderRight","spacing","div","whileHover","scale","borderRadius","boxShadow","transition","backgroundColor","variant","color","onClick","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","categoryKey","textAlign","borderColor","flexGrow","flexDirection","gutterBottom","container","item","xs","sm","md","lg","xl","_id","_c","$RefreshReg$"],"sources":["C:/Users/jacko/Desktop/Osobní projekty/react/contactkeeper/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Grid, Stack, Typography , Container, Button, Box, List, ListItem, ListItemText, Divider } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useUser } from '../context/UserContext';\r\nimport ContactSection from \"../components/ContactSection\";\r\nimport ContactCard from \"../components/ContactCard\";\r\nimport { motion } from 'framer-motion';\r\n\r\n\r\nconst Dashboard = () => {\r\n    const { userId } = useUser();\r\n    const [contacts, setContacts] = useState([]);\r\n    const [selectedCategory, setSelectedCategory] = useState('práce');\r\n    const navigate = useNavigate();\r\n\r\n    const contactCategories = {\r\n        práce: 'Pracovní kontakty',\r\n        škola: 'Školní kontakty',\r\n        dovolená: 'Kontakty z dovolené',\r\n        koníčky: 'Kontakty z koníčků',\r\n        ostatní: 'Ostatní kontakty',\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchContacts = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/contacts', {\r\n                    params: { userId }\r\n                });\r\n                setContacts(response.data);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        };\r\n\r\n        fetchContacts();\r\n    }, [userId]);\r\n\r\n    const handleAddContact = () => {\r\n        navigate('/add-contact');\r\n    };\r\n\r\n    const filteredContacts = contacts.filter(contact => contact.contactSource === selectedCategory);\r\n\r\n    return (\r\n        <Container sx={{ display: 'flex', minHeight: '100vh', paddingTop: 3, minWidth: '100%', p:0 , m:0 }}>\r\n            {/* Levý panel jako samostatná sekce */}\r\n            <Box sx={{ width: '20%', padding: 2, borderRight: '1px solid #ddd' }}>\r\n                <Stack spacing={2}> {/* Použijeme Stack pro vertikální uspořádání */}\r\n                    <motion.div whileHover={{ scale: 1.05 }}>\r\n                    <Button\r\n                        sx={{\r\n                            borderRadius: 10,\r\n                            boxShadow: 3,\r\n                            transition: 'all 0.3s ease-in-out',\r\n                            '&:hover': {\r\n                                boxShadow: 5,\r\n                                backgroundColor: '#5c6bc0', // Změna barvy při hoveru\r\n                            },\r\n                        }}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleAddContact}\r\n                        fullWidth\r\n                    >\r\n                        Přidat nový kontakt\r\n                    </Button>\r\n                    </motion.div>\r\n                    <Divider />\r\n\r\n                    {/* Seznam kategorií jako tlačítka */}\r\n                    {Object.keys(contactCategories).map((categoryKey) => (\r\n                        <motion.div key={categoryKey} whileHover={{ scale: 1.05 }}>\r\n                        <Button\r\n                            key={categoryKey}\r\n                            variant=\"outlined\" // Tlačítka jako obrysová pro lepší vzhled\r\n                            fullWidth\r\n                            onClick={() => setSelectedCategory(categoryKey)}\r\n                            sx={{\r\n                                textAlign: 'left',\r\n                                borderColor: selectedCategory === categoryKey ? '#1976d2' : '#ddd',\r\n                                color: selectedCategory === categoryKey ? '#1976d2' : 'inherit',\r\n                                borderRadius: 10,\r\n                                boxShadow: 3,\r\n                                transition: 'all 0.3s ease-in-out',\r\n                                '&:hover': {\r\n                                    borderColor: '#1976d2',\r\n                                    boxShadow: 4,\r\n                                    color: '#1976d2',\r\n                                },\r\n                            }}\r\n                        >\r\n                            {contactCategories[categoryKey]}\r\n                        </Button>\r\n                        </motion.div>\r\n                    ))}\r\n                </Stack>\r\n            </Box>\r\n\r\n            <Box sx={{ flexGrow: 1, padding: 2, display: 'flex', flexDirection: 'column', width: '75%' }}>\r\n                {/* Zobrazení kategorie */}\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    {contactCategories[selectedCategory]}\r\n                </Typography>\r\n\r\n                {/* Zobrazení všech kontaktů */}\r\n                <Box sx={{ padding: 2 }}>\r\n                    <Grid container spacing={3}> {/* Používáme Grid pro rozložení kontaktů */}\r\n                        {filteredContacts.map((contact) => (\r\n                            <Grid item xs={12} sm={6} md={6} lg={4} xl={3} key={contact._id}> {/* Upravujeme velikosti pro různé obrazovky */}\r\n                                <motion.div whileHover={{ scale: 1.05 }}>\r\n                                    <ContactCard contact={contact} />\r\n                                </motion.div>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Box>\r\n            </Box>\r\n        </Container>\r\n\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}